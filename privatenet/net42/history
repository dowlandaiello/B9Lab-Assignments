var bytecode = "0x6003600501600202600055"
var createTx = eth.sendTransaction({ from: eth.accounts[0], data: bytecode })
[A[Bvar createTx = eth.sendTransaction({ from: eth.accounts[0], data: bytecode })
var bytecode = "0x6003600501600202600055"
var createTx = eth.sendTransaction({ from: eth.accounts[0], data: bytecode })
miner.start()
var createTx = eth.sendTransaction({ from: eth.accounts[0], data: bytecode })
miner.stop()
var bytecode = "0x6003600501600202600055"
var createTx = eth.sendTransaction({ from: eth.accounts[0], data: bytecode })
var created = eth.getTransactionReceipt(createTx).contractAddress
eth.getStorageAt(created, 0)
var created = eth.getTransactionReceipt(createTx).contractAddress
var bytecode2 = "0x6011600055"
eth.sendTransaction({ from: eth.accounts[0], to: created, data: bytecode2 })
eth.getStorageAt(created, 0)
var bytecode3 = "0x6006600c60003960066000f3600035600055"
var createTx3 = eth.sendTransaction({ from: eth.accounts[0], data: bytecode3 })
var created3 = eth.getTransactionReceipt(createTx3).contractAddress
miner.start()
var created3 = eth.getTransactionReceipt(createTx3).contractAddress
eth.getCode(created3)
eth.getStorageAt(created3, 0)
eth.sendTransaction({ from: eth.accounts[0], to: created3, data: "0x67" })
var bytecode3 = "0x6006600c60003960066000f3600035600055"
var createTx3 = eth.sendTransaction({ from: eth.accounts[0], data: bytecode3 })
miner.start()
miner.stop()
var created3 = eth.getTransactionReceipt(createTx3).contractAddress
eth.getBalance(eth.accounts[0]);
var faucetCompiled = {"contracts":{"./faucet.sol:Faucet":{"abi":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toWhom\",\"type\":\"address\"}],\"name\":\"sendWei\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getWei\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSendAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killMe\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","bin":"6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000600181905550610358806100626000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe01461007a578063148f2e5e146100a55780633ba15036146100e85780638da5cb5b146100ff57806390b08a5214610156578063b603cd8014610181575b005b34801561008657600080fd5b5061008f6101b0565b6040518082815260200191505060405180910390f35b3480156100b157600080fd5b506100e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101cf565b005b3480156100f457600080fd5b506100fd61021b565b005b34801561010b57600080fd5b50610114610266565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016257600080fd5b5061016b61028b565b6040518082815260200191505060405180910390f35b34801561018d57600080fd5b50610196610295565b604051808215151515815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610217573d6000803e3d6000fd5b5050565b3373ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610263573d6000803e3d6000fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102f257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a72305820b93a7f20b989ac30e7d0d9c95ec262c634c72ebef3e6758ce40c68545f5dc28d0029"}},"version":"0.4.24+commit.e67f0147.Darwin.appleclang"}
var faucetContractKey = "./faucet.sol";
faucetContractKey;
typeof faucetCompiled.contracts[faucetContractKey].abi;
faucetContractKey = "./faucet.sol:Faucet";
typeof faucetCompiled.contracts[faucetContractKey].abi;
var faucetContract = eth.contract(JSON.parse(faucetCompiled.contracts[faucetContractKey].abi));
miner.start(1);
var deployTransactionObject = {from: eth.coinbase, data: "0x" + faucetCompiled.contract[faucetContractKey].bin, value: web.toWei(1, "ether"), gas: 1000000};
var deployTransactionObject = {from: eth.coinbase, data: "0x" + faucetCompiled.contracts[faucetContractKey].bin, value: web.toWei(1, "ether"), gas: 1000000};
miner.stop();
var deployTransactionObject = {from: eth.coinbase, data: "0x" + faucetCompiled.contracts[faucetContractKey].bin, value: web.toWei(1, "ether"), gas: 1000000};
var deployTransactionObject = {from: eth.coinbase, data: "0x" + faucetCompiled.contracts[faucetContractKey].bin, value: web3.toWei(1, "ether"), gas: 1000000};
miner.start(1)
var faucetInstance = faucetContract.new(deployTransactionObject);
faucetInstance;
eth.getTransactionReceipt(faucetInstance.transactionHash);
var faucetAddress = eth.getTransactionReceipt(faucetInstance.transactinoHash).contractAddress
var faucetAddress = eth.getTransactionReceipt(faucetInstance.transactionHash).contractAddress;
faucetAddress;
faucetInstance = faucetContract.at(faucetAddress);
faucetInstance;
var deployedBinary = eth.getCode(faucetInstance.address);
deployedBinary;
eth.getBalance(faucetInstance.address);
web3.fromWei(eth.getBalance(faucetInstance.address), "ether");
faucetInstance.getBalance.call();
eth.accounts;
eth.getBalance(eth.accounts[1]);
faucetInstance.getWei({from: eth.accounts[1]});
faucetInstance.sendWei.call(eth.accounts[1], {from: eth.accounts[0]});
var sendWeiTx = faucetInstance.sendWei(eth.accounts[1], {from: eth.accounts[0]});
eth.getBalance(eth.accounts[1]);
eth.getBalance(faucetInstance.address);
eth.getTransaction(sendWeiTx);
faucetInstance.sendWei.call(eth.accounts[1], {from: eth.accounts[0]});
var sendWeiTx2 = faucetInstance.sendWei(eth.accounts[1], { from: eth.accounts[0]});
eth.getTransactionReceipt(sendWeiTx2);
eth.getTransactinoReceipt(sendWeiTx2);
eth.getTransactionReceipt(sendWeiTx2);
eth.getBalance(faucetInstance.address);
eth.sendTransaction({from: eth.accounts[0], to: faucetInstance.address, value: web3.toWei(1, "ether")});
eth.getBalance(faucetInstance.address);
var sendWeiData = faucetInstance.sendWei.getData(eth.accounts[1]);
sendWeiData
eth.sendTransaction({from: eth.accounts[0], data: sendWeiData, to: faucetInstance.address, gas: 90000, gasPrice: 20000000000});
var sub = 1 - 2;
sub
var prod = (0xffffffffffffffffffff * 0xffffffffffffffffffff) * 0;
prod;
uint arg1;
uint arg2;
assert(arg1 + arg2 >= arg1);
var uint arg1;
var arg1;
arg1;
arg1 = "test";
arg1;
var uint arg1;
enum
enum ahnd { Left, Right }
exi
eth.blockNumber
miner.startMining(1)
miner.start(1)